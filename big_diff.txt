diff --git a/.pre-commit-config.yaml b/.pre-commit-config.yaml
index 549cbe3..8a27854 100644
--- a/.pre-commit-config.yaml
+++ b/.pre-commit-config.yaml
@@ -1,31 +1,16 @@
 repos:
 -   repo: local
     hooks:
-    -   id: uv-format
-        name: Format code with uv
-        entry: uv format
-        language: python
-        types: [python]
-        stages: [pre-commit]
     -   id: pytest
         name: Run tests with pytest
         entry: uv run pytest
-        language: python
-        types: [python]
+        language: system
         stages: [pre-push]
+        pass_filenames: false
+        always_run: true        
     -   id: branch-protection
         name: Block direct pushes to protected branches
-        entry: |
-            #!/bin/bash
-            branch=$(git rev-parse --abbrev-ref HEAD)
-            if [ "$branch" = "main" ] || \
-               [ "$branch" = "staging" ] || \
-               [[ "$branch" == mvp* ]] || \
-               [[ "$branch" == dev* ]]; then
-              echo "ERROR: Direct pushes to the protected '$branch' branch are forbidden."
-              echo "Please use a feature branch and a Pull Request."
-              exit 1
-            fi
+        entry: utils/branch_protection.sh
         language: script
         stages: [pre-push]
 
@@ -34,3 +19,14 @@ repos:
     hooks:
     -   id: commitizen
         stages: [commit-msg]
+-   repo: https://github.com/astral-sh/ruff-pre-commit
+    # Ruff version.
+    rev: v0.13.0
+    hooks:
+    # Run the linter.
+      - id: ruff-check
+        args: [ --fix ]
+        stages: [pre-commit]
+    # Run the formatter.
+      - id: ruff-format
+        stages: [pre-commit]
diff --git a/docs/CONTRIBUTING.md b/docs/CONTRIBUTING.md
index 627d060..2d61e45 100644
--- a/docs/CONTRIBUTING.md
+++ b/docs/CONTRIBUTING.md
@@ -21,7 +21,7 @@ uv sync
 
 # Set up pre-commit by installing it as  tool instead of a package. This avoids behavior inconsistencies.
 uv tool install pre-commit
-pre-commit install
+pre-commit install --hook-type pre-push --hook-type pre-commit -hook-type commit-msg
 ```
 
 **3. Configure Environment Variables**
@@ -44,12 +44,12 @@ The test suite automatically uses **`.env.test`**. A fixture in **`tests/conftes
 ### Branching Model
 
   * **`main`**: Contains only stable, production-ready releases.
-  * **`mvpX-dev`** (e.g., `mvp1-dev`): The primary development branch for the current MVP. All feature and bugfix branches are merged here.
+  * **`mvpX-dev`** (e.g., `mvp1-dev`): The primary development branch for the current MVP. All feature and bugfix branches are merged here via pull requests.
 
 The standard workflow is:
 
-1.  Ensure your local `mvp1-dev` is up to date: `git checkout mvp1-dev && git pull origin mvp1-dev`.
-2.  Create a descriptive feature or bugfix branch from `mvp1-dev`e.g. `git checkout -b feat/add-table-extractor` or `git checkout -b bug/restore-column-diagnostic`
+1.  Ensure your local `mvp1-dev` is up to date: `git switch mvp1-dev && git pull origin mvp1-dev`.
+2.  Create a descriptive feature or bugfix branch from `mvp1-dev`e.g. `git switch -c feat/add-table-extractor` or `git switch -c bug/restore-column-diagnostic`
 3.  Make your changes on the feature or bugfix branch.
 4.  Open a pull request targeting `mvp1-dev`.
 5.  Clean up your branch once the PR is merged.
@@ -68,7 +68,7 @@ Smaller, focused commits are easy to revert and serve as clean building blocks f
 #### Commit Message Enforcement
 
 We use `commitizen` to automatically enforce the Conventional Commits standard. A pre-commit hook will check your commit message format before a commit is created.
-If your commit is blocked due to a formatting error, we recommend trying to rewrite it with the interactive helper by running `cz commit`.
+If your commit is blocked due to a formatting error, we recommend trying to rewrite it with the interactive helper by running `uv run cz commit`.
 
 #### Commit examples
 
@@ -129,19 +129,20 @@ This approach matches well with our branching workflow. You create a short-lived
 
 ### Formatting
 
-Before committing, please format your code to ensure consistency across the project.
+A pre-commit hook runs Ruff for linting and formatting. If you want to do it manually, use the following:
 
 ```shell
-uv format
+ruff check --fix && ruff format
 ```
 
 ### Running Tests
 
-Ensure all tests pass before submitting a pull request. The test suite uses the configuration in your `.env.test` file.
+A pre-push hook runs Pytest before every push. To do it manually instead, try:
 
 ```shell
 uv run pytest
 ```
+The test suite uses the configuration in your `.env.test` file.
 
 -----
 
@@ -231,3 +232,40 @@ eiti-data-importer/
 ├── pyproject.toml                    # The ROOT workspace manifest
 └── README.md
 ```
+-----
+
+## Frequently Asked Questions
+
+***
+
+### Q: Why did my `git push` to `main` fail?
+
+A: We use a `pre-push` hook to protect key branches (`main`, `staging`, `dev`, and `mpX`) from direct pushes. This helps us ensure all changes are reviewed through a Pull Request.
+
+***
+
+### Q: The `pre-commit` hooks are not running when I commit. What should I do?
+
+A: You likely have not installed the Git hooks correctly. You need to run `pre-commit install --hook-type pre-push --hook-type pre-commit -hook-type commit-msg` from the root of the repository. This command sets up the necessary hooks in your local `.git` directory.
+
+***
+
+### Q: I made a change on `main` by accident. How do I move it to a new branch?
+
+A: The process depends on whether you have committed the change.
+
+-   **If you have committed the change**:
+    1.  Create and switch to a new branch: `git switch -c new-feature-branch`
+    2.  Switch back to `main`: `git switch main`
+    3.  Find the commit hash: `git log`
+    4.  Cherry-pick the commit: `git cherry-pick <commit-hash>`
+    5.  Revert the commit on `main`: `git revert <commit-hash>` 
+
+-   **If you have staged the change**:
+    1.  Un-stage the change: `git restore --staged .`
+    2.  Create and switch to a new branch: `git switch -c new-feature-branch`
+    3.  Stage and commit your changes: `git add .` and `git commit -m "feat: my new feature"`
+
+-   **If the changes are not staged**:
+    1.  Create and switch to a new branch: `git switch -c new-feature-branch`
+    2.  Stage and commit your changes: `git add .` and `git commit -m "feat: my new feature"`
diff --git a/pyproject.toml b/pyproject.toml
index 9165a96..01e5623 100644
--- a/pyproject.toml
+++ b/pyproject.toml
@@ -7,7 +7,8 @@ requires-python = ">=3.13"
 dependencies = [
     "parser",
     "importer",
-    "api"
+    "api",
+    "ruff>=0.13.0",
 ]
 
 [tool.uv.workspace]
@@ -33,7 +34,6 @@ version_provider = "uv"
 update_changelog_on_bump = true
 major_version_zero = true
 
-
 [dependency-groups]
 dev = [
     "basedpyright>=1.31.4",
diff --git a/uv.lock b/uv.lock
index 1c83c92..1e5a558 100644
--- a/uv.lock
+++ b/uv.lock
@@ -1,5 +1,5 @@
 version = 1
-revision = 2
+revision = 3
 requires-python = ">=3.13"
 
 [manifest]
@@ -22,7 +22,7 @@ wheels = [
 [[package]]
 name = "api"
 version = "0.1.0"
-source = { virtual = "services/api" }
+source = { editable = "services/api" }
 dependencies = [
     { name = "importer" },
     { name = "parser" },
@@ -30,8 +30,8 @@ dependencies = [
 
 [package.metadata]
 requires-dist = [
-    { name = "importer", virtual = "packages/importer" },
-    { name = "parser", virtual = "packages/parser" },
+    { name = "importer", editable = "packages/importer" },
+    { name = "parser", editable = "packages/parser" },
 ]
 
 [[package]]
@@ -147,6 +147,7 @@ dependencies = [
     { name = "api" },
     { name = "importer" },
     { name = "parser" },
+    { name = "ruff" },
 ]
 
 [package.dev-dependencies]
@@ -158,9 +159,10 @@ dev = [
 
 [package.metadata]
 requires-dist = [
-    { name = "api", virtual = "services/api" },
-    { name = "importer", virtual = "packages/importer" },
-    { name = "parser", virtual = "packages/parser" },
+    { name = "api", editable = "services/api" },
+    { name = "importer", editable = "packages/importer" },
+    { name = "parser", editable = "packages/parser" },
+    { name = "ruff", specifier = ">=0.13.0" },
 ]
 
 [package.metadata.requires-dev]
@@ -182,7 +184,7 @@ wheels = [
 [[package]]
 name = "importer"
 version = "0.1.0"
-source = { virtual = "packages/importer" }
+source = { editable = "packages/importer" }
 dependencies = [
     { name = "parser" },
     { name = "polars" },
@@ -190,7 +192,7 @@ dependencies = [
 
 [package.metadata]
 requires-dist = [
-    { name = "parser", virtual = "packages/parser" },
+    { name = "parser", editable = "packages/parser" },
     { name = "polars", specifier = ">=1.3.1" },
 ]
 
@@ -281,7 +283,7 @@ wheels = [
 [[package]]
 name = "parser"
 version = "0.1.0"
-source = { virtual = "packages/parser" }
+source = { editable = "packages/parser" }
 dependencies = [
     { name = "openpyxl" },
     { name = "polars" },
@@ -427,6 +429,32 @@ wheels = [
     { url = "https://files.pythonhosted.org/packages/3c/26/1062c7ec1b053db9e499b4d2d5bc231743201b74051c973dadeac80a8f43/questionary-2.1.1-py3-none-any.whl", hash = "sha256:a51af13f345f1cdea62347589fbb6df3b290306ab8930713bfae4d475a7d4a59", size = 36753, upload-time = "2025-08-28T19:00:19.56Z" },
 ]
 
+[[package]]
+name = "ruff"
+version = "0.13.0"
+source = { registry = "https://pypi.org/simple" }
+sdist = { url = "https://files.pythonhosted.org/packages/6e/1a/1f4b722862840295bcaba8c9e5261572347509548faaa99b2d57ee7bfe6a/ruff-0.13.0.tar.gz", hash = "sha256:5b4b1ee7eb35afae128ab94459b13b2baaed282b1fb0f472a73c82c996c8ae60", size = 5372863, upload-time = "2025-09-10T16:25:37.917Z" }
+wheels = [
+    { url = "https://files.pythonhosted.org/packages/ac/fe/6f87b419dbe166fd30a991390221f14c5b68946f389ea07913e1719741e0/ruff-0.13.0-py3-none-linux_armv6l.whl", hash = "sha256:137f3d65d58ee828ae136a12d1dc33d992773d8f7644bc6b82714570f31b2004", size = 12187826, upload-time = "2025-09-10T16:24:39.5Z" },
+    { url = "https://files.pythonhosted.org/packages/e4/25/c92296b1fc36d2499e12b74a3fdb230f77af7bdf048fad7b0a62e94ed56a/ruff-0.13.0-py3-none-macosx_10_12_x86_64.whl", hash = "sha256:21ae48151b66e71fd111b7d79f9ad358814ed58c339631450c66a4be33cc28b9", size = 12933428, upload-time = "2025-09-10T16:24:43.866Z" },
+    { url = "https://files.pythonhosted.org/packages/44/cf/40bc7221a949470307d9c35b4ef5810c294e6cfa3caafb57d882731a9f42/ruff-0.13.0-py3-none-macosx_11_0_arm64.whl", hash = "sha256:64de45f4ca5441209e41742d527944635a05a6e7c05798904f39c85bafa819e3", size = 12095543, upload-time = "2025-09-10T16:24:46.638Z" },
+    { url = "https://files.pythonhosted.org/packages/f1/03/8b5ff2a211efb68c63a1d03d157e924997ada87d01bebffbd13a0f3fcdeb/ruff-0.13.0-py3-none-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:2b2c653ae9b9d46e0ef62fc6fbf5b979bda20a0b1d2b22f8f7eb0cde9f4963b8", size = 12312489, upload-time = "2025-09-10T16:24:49.556Z" },
+    { url = "https://files.pythonhosted.org/packages/37/fc/2336ef6d5e9c8d8ea8305c5f91e767d795cd4fc171a6d97ef38a5302dadc/ruff-0.13.0-py3-none-manylinux_2_17_armv7l.manylinux2014_armv7l.whl", hash = "sha256:4cec632534332062bc9eb5884a267b689085a1afea9801bf94e3ba7498a2d207", size = 11991631, upload-time = "2025-09-10T16:24:53.439Z" },
+    { url = "https://files.pythonhosted.org/packages/39/7f/f6d574d100fca83d32637d7f5541bea2f5e473c40020bbc7fc4a4d5b7294/ruff-0.13.0-py3-none-manylinux_2_17_i686.manylinux2014_i686.whl", hash = "sha256:dcd628101d9f7d122e120ac7c17e0a0f468b19bc925501dbe03c1cb7f5415b24", size = 13720602, upload-time = "2025-09-10T16:24:56.392Z" },
+    { url = "https://files.pythonhosted.org/packages/fd/c8/a8a5b81d8729b5d1f663348d11e2a9d65a7a9bd3c399763b1a51c72be1ce/ruff-0.13.0-py3-none-manylinux_2_17_ppc64.manylinux2014_ppc64.whl", hash = "sha256:afe37db8e1466acb173bb2a39ca92df00570e0fd7c94c72d87b51b21bb63efea", size = 14697751, upload-time = "2025-09-10T16:24:59.89Z" },
+    { url = "https://files.pythonhosted.org/packages/57/f5/183ec292272ce7ec5e882aea74937f7288e88ecb500198b832c24debc6d3/ruff-0.13.0-py3-none-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:0f96a8d90bb258d7d3358b372905fe7333aaacf6c39e2408b9f8ba181f4b6ef2", size = 14095317, upload-time = "2025-09-10T16:25:03.025Z" },
+    { url = "https://files.pythonhosted.org/packages/9f/8d/7f9771c971724701af7926c14dab31754e7b303d127b0d3f01116faef456/ruff-0.13.0-py3-none-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:94b5e3d883e4f924c5298e3f2ee0f3085819c14f68d1e5b6715597681433f153", size = 13144418, upload-time = "2025-09-10T16:25:06.272Z" },
+    { url = "https://files.pythonhosted.org/packages/a8/a6/7985ad1778e60922d4bef546688cd8a25822c58873e9ff30189cfe5dc4ab/ruff-0.13.0-py3-none-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", hash = "sha256:03447f3d18479df3d24917a92d768a89f873a7181a064858ea90a804a7538991", size = 13370843, upload-time = "2025-09-10T16:25:09.965Z" },
+    { url = "https://files.pythonhosted.org/packages/64/1c/bafdd5a7a05a50cc51d9f5711da704942d8dd62df3d8c70c311e98ce9f8a/ruff-0.13.0-py3-none-manylinux_2_31_riscv64.whl", hash = "sha256:fbc6b1934eb1c0033da427c805e27d164bb713f8e273a024a7e86176d7f462cf", size = 13321891, upload-time = "2025-09-10T16:25:12.969Z" },
+    { url = "https://files.pythonhosted.org/packages/bc/3e/7817f989cb9725ef7e8d2cee74186bf90555279e119de50c750c4b7a72fe/ruff-0.13.0-py3-none-musllinux_1_2_aarch64.whl", hash = "sha256:a8ab6a3e03665d39d4a25ee199d207a488724f022db0e1fe4002968abdb8001b", size = 12119119, upload-time = "2025-09-10T16:25:16.621Z" },
+    { url = "https://files.pythonhosted.org/packages/58/07/9df080742e8d1080e60c426dce6e96a8faf9a371e2ce22eef662e3839c95/ruff-0.13.0-py3-none-musllinux_1_2_armv7l.whl", hash = "sha256:d2a5c62f8ccc6dd2fe259917482de7275cecc86141ee10432727c4816235bc41", size = 11961594, upload-time = "2025-09-10T16:25:19.49Z" },
+    { url = "https://files.pythonhosted.org/packages/6a/f4/ae1185349197d26a2316840cb4d6c3fba61d4ac36ed728bf0228b222d71f/ruff-0.13.0-py3-none-musllinux_1_2_i686.whl", hash = "sha256:b7b85ca27aeeb1ab421bc787009831cffe6048faae08ad80867edab9f2760945", size = 12933377, upload-time = "2025-09-10T16:25:22.371Z" },
+    { url = "https://files.pythonhosted.org/packages/b6/39/e776c10a3b349fc8209a905bfb327831d7516f6058339a613a8d2aaecacd/ruff-0.13.0-py3-none-musllinux_1_2_x86_64.whl", hash = "sha256:79ea0c44a3032af768cabfd9616e44c24303af49d633b43e3a5096e009ebe823", size = 13418555, upload-time = "2025-09-10T16:25:25.681Z" },
+    { url = "https://files.pythonhosted.org/packages/46/09/dca8df3d48e8b3f4202bf20b1658898e74b6442ac835bfe2c1816d926697/ruff-0.13.0-py3-none-win32.whl", hash = "sha256:4e473e8f0e6a04e4113f2e1de12a5039579892329ecc49958424e5568ef4f768", size = 12141613, upload-time = "2025-09-10T16:25:28.664Z" },
+    { url = "https://files.pythonhosted.org/packages/61/21/0647eb71ed99b888ad50e44d8ec65d7148babc0e242d531a499a0bbcda5f/ruff-0.13.0-py3-none-win_amd64.whl", hash = "sha256:48e5c25c7a3713eea9ce755995767f4dcd1b0b9599b638b12946e892123d1efb", size = 13258250, upload-time = "2025-09-10T16:25:31.773Z" },
+    { url = "https://files.pythonhosted.org/packages/e1/a3/03216a6a86c706df54422612981fb0f9041dbb452c3401501d4a22b942c9/ruff-0.13.0-py3-none-win_arm64.whl", hash = "sha256:ab80525317b1e1d38614addec8ac954f1b3e662de9d59114ecbf771d00cf613e", size = 12312357, upload-time = "2025-09-10T16:25:35.595Z" },
+]
+
 [[package]]
 name = "termcolor"
 version = "3.1.0"
